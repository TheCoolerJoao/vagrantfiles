# ansible-playbook yml/install.yaml -i hosts.ini
---
- hosts: all
  become: true
  tasks:

  - name: install dockers
    apt:
      state: present
      name:
      - docker.io
      - docker-compose
      - htop

  - name: Update /etc/hosts
    blockinfile:
        path: /etc/hosts
        create: yes
        block: |
          127.0.0.1 localhost
          192.168.3.101 horse-master
          192.168.3.102 horse-node-1
          192.168.3.103 horse-node-2
          192.168.3.104 horse-proxy
  
  #- name: Get info on Docker Swarm
  #  docker_swarm_info:
  #  ignore_errors: yes
  #  register: result

- hosts: master
  become: true
  tasks:

- hosts: nodes
  become: true
  tasks:
  - name: hello motherfocker
    #debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']
    debug: var=ansible_enp0s3.ipv4.address
    debug: var=ansible_eth0.ipv4.address
    #debug: var=hostvars[inventory_hostname]['ansible_default_ipv6']['address']

##
## daqui pra baixo Ã© tudo descartavel
##
##

#- hosts: all
#  become: true
#  tasks:

#  - name: Iniciando swarm com parametros padroes
#    community.general.docker_swarm:
#      state: present
#      advertise_addr: "{{ ansible_host }}"
#    register: result
#    when: inventory_hostname == groups['master'][0]
  
#  - name: Get join-token for manager nodes
#    set_fact:
#      join_token_manager: "{{ hostvars[groups['master'][0]].result.swarm_facts.JoinTokens.Manager }}"
#  - name: Get join-token for worker nodes
#    set_fact:
#      join_token_worker: "{{ hostvars[groups['master'][0]].result.swarm_facts.JoinTokens.Worker }}"

#  - name: Adicionando os nodes
#    community.general.docker_swarm:
#      state: join
#      join_token: "{{ join_token_worker }}"
#      advertise_addr: "{{ ansible_host }}"
#      remote_addrs: "{{ hostvars[groups['nodes'][0]].ansible_host }}"
#    when:
#      - inventory_hostname not in groups['master']

...